Dongle Me by cyclops
--------------------

Usage (emulator):
-----------------
- go to dongle\bin\vmulti and run install_driver.bat. Successful installation
  will result in new HID devices being shown in Device Manager (tested on XP).
- go to \dongle\bin and run kg.exe /emu
- run the crackme

Usage (hw dongle):
------------------
- program your dongle as explained below
- run kg.exe /dongle to write correct signature to the dongle
- unplug and plug again
- run the crackme

Hw dongle
---------

You will need to acquire a Teensy compatible dongle, or build one yourself.

The keygen generates a correct ECNR signature for current user's username 
and transmits it to the dongle. Dongle stores it in EEPROM and peridically 
sends the signature to the OS.

You will need:
- teensy (www.pjrc.com/teensy), or a compatible clone
- mingw compiler
- WinAVR
- unix utils (not essential, but used in makefile)
- miracl library (www.shamus.ie), but only for headers, you don't need to
  compile it -- necessary .o files are in \mingw-obj folder
- FLIP 3.4.3 (http://goo.gl/ZRqFD), but only if you are using a clone and
  the original Teensy loader doesn't work for you

Installation:
- go to usb_rawhid dir. and change "MCU" in makefile, to match the processor
  you are using. When done, build example.hex with "make".
- using FLIP, or the original Teensy loader, load example.hex onto the
  dongle. There should be a button on the dongle, don't forget to keep it
  pressed when plugging it in, otherwise you won't be able to program it.
- Unplug the dongle and plug it again, but without pressing the button. This
  will allow your program to run.
- Go to \kg directory and build with "make". 
- Run kg.exe /dongle to send necessary information to the dongle.
- Done. Your dongle will be accepted by the crackme, but only on system 
  accounts you run kg.exe under (usernames must match, otherwise you will 
  need to reprogram).

WARNING
-------
If you ever decide to mix mingw and VS object files, punch yourself in the face
and think again. 
Here are some tips, if you decide to ignore these words of wisdom:

- to disable name mangling in VS, declare functions as __cdecl. This will 
  produce _foo, instead of foo@N
- in sources compiled with mingw (g++), declare functions linked from VS objects
  in extern "C" {}
- if you are getting errors regarding __security_cookie* symbols, remove /GS
  flag from VS parameters. In case of DDK, change BUFFER_OVERFLOW_CHECKS to 0,
  inside i386mk.inc.

pa_kt
gdtr.wordpress.com
